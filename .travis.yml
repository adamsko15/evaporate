sudo: required

# os:
#   - linux
#   - osx

services:
  - docker

language: generic

# Caching so the next build will be fast too
cache:
  directories:
  - $HOME/.stack

addons:
  apt:
    packages:
      - libgmp-dev

before_install:
  - set -e
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update      ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gmp ; fi
  - mkdir -p ~/.local/bin
  - export PATH=$HOME/.local/bin:$PATH
  # Download and unpack the stack executable
  # Could use $TRAVIS_OS_NAME to get the right stack executable but it's
  # probably better not to rely on that env var too much
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    travis_retry curl -L https://www.stackage.org/stack/osx-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack';
    fi

install:
  # Build dependencies
  - stack test --no-terminal --install-ghc --only-dependencies

script:
  # Build the package, its tests, and its docs and run the tests
  - stack test --no-terminal --ghc-options -Wall
  - BINARY=$(stack path --local-install-root)/bin/evaporate;
  - VERSION=$(cat evaporate.cabal | awk '/^version:\s+([[:digit:]]\.[[:digit:]]\.[[:digit:]]\.[[:digit:]])/{print $2}');

before_deploy:
  - ZIP_NAME=evaporate-$TRAVIS_OS_NAME-v$VERSION.zip
  - zip $ZIP_NAME $BINARY README.md

deploy:
  provider: releases
  api_key: $GITHUB_OAUTH_TOKEN
  skip_cleanup: true
  file: $ZIP_NAME
  all_branches: true

  # branch: master
  # on:
  #   tags: true

after_script:
  - if [[ "$TRAVIS_BRANCH" == "master" ]] && [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    mkdir -p .publish;
    cp $BINARY .publish;
    echo "Building docker container for version $VERSION";
    docker login -e=$DOCKER_EMAIL -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD;
    docker build --file build-publish.dockerfile -t evaporate .;
    docker tag evaporate askoufis/evaporate:$VERSION;
    echo "Pushing docker image evaporate:$VERSION";
    docker push askoufis/evaporate;
    fi
